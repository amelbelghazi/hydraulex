
/*! AdminLTE app.js
 * ================
 * Main JS application file for AdminLTE v2. This file
 * should be included in all pages. It controls some layout
 * options and implements exclusive AdminLTE plugins.
 *
 * @Author  Almsaeed Studio
 * @Support <http://www.almsaeedstudio.com>
 * @Email   <abdullah@almsaeedstudio.com>
 * @version 2.3.8
 * @license MIT <http://opensource.org/licenses/MIT>
 */
function _init(){"use strict";$.layout={activate:function(){var a=this;a.fix(),a.fixSidebar(),$("body, html, .wrapper").css("height","auto"),$(window,".wrapper").resize(function(){a.fix(),a.fixSidebar()})},fix:function(){$(".layout-boxed > .wrapper").css("overflow","hidden");var a=$(".main-footer").outerHeight()||0,b=$(".main-header").outerHeight()+a,c=$(window).height(),d=$(".sidebar").height()||0;if($("body").hasClass("fixed"))$(".content-wrapper, .right-side").css("min-height",c-a);else{var e;c>=d?($(".content-wrapper, .right-side").css("min-height",c-b),e=c-b):($(".content-wrapper, .right-side").css("min-height",d),e=d);var f=$($.options.controlSidebarOptions.selector);"undefined"!=typeof f&&f.height()>e&&$(".content-wrapper, .right-side").css("min-height",f.height())}},fixSidebar:function(){return $("body").hasClass("fixed")?("undefined"==typeof $.fn.slimScroll&&window.console&&window.console.error("Error: the fixed layout requires the slimscroll plugin!"),void($.options.sidebarSlimScroll&&"undefined"!=typeof $.fn.slimScroll&&($(".sidebar").slimScroll({destroy:!0}).height("auto"),$(".sidebar").slimScroll({height:$(window).height()-$(".main-header").height()+"px",color:"rgba(0,0,0,0.2)",size:"3px"})))):void("undefined"!=typeof $.fn.slimScroll&&$(".sidebar").slimScroll({destroy:!0}).height("auto"))}},$.pushMenu={activate:function(a){var b=$.options.screenSizes;$(document).on("click",a,function(a){a.preventDefault(),$(window).width()>b.sm-1?$("body").hasClass("sidebar-collapse")?$("body").removeClass("sidebar-collapse").trigger("expanded.pushMenu"):$("body").addClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").hasClass("sidebar-open")?$("body").removeClass("sidebar-open").removeClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").addClass("sidebar-open").trigger("expanded.pushMenu")}),$(".content-wrapper").click(function(){$(window).width()<=b.sm-1&&$("body").hasClass("sidebar-open")&&$("body").removeClass("sidebar-open")}),($.options.sidebarExpandOnHover||$("body").hasClass("fixed")&&$("body").hasClass("sidebar-mini"))&&this.expandOnHover()},expandOnHover:function(){var a=this,b=$.options.screenSizes.sm-1;$(".main-sidebar").hover(function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-collapse")&&$(window).width()>b&&a.expand()},function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-expanded-on-hover")&&$(window).width()>b&&a.collapse()})},expand:function(){$("body").removeClass("sidebar-collapse").addClass("sidebar-expanded-on-hover")},collapse:function(){$("body").hasClass("sidebar-expanded-on-hover")&&$("body").removeClass("sidebar-expanded-on-hover").addClass("sidebar-collapse")}},$.tree=function(a){var b=this,c=$.options.animationSpeed;$(document).off("click",a+" li a").on("click",a+" li a",function(a){var d=$(this),e=d.next();if(e.is(".treeview-menu")&&e.is(":visible")&&!$("body").hasClass("sidebar-collapse"))e.slideUp(c,function(){e.removeClass("menu-open")}),e.parent("li").removeClass("active");else if(e.is(".treeview-menu")&&!e.is(":visible")){var f=d.parents("ul").first(),g=f.find("ul:visible").slideUp(c);g.removeClass("menu-open");var h=d.parent("li");e.slideDown(c,function(){e.addClass("menu-open"),f.find("li.active").removeClass("active"),h.addClass("active"),b.layout.fix()})}e.is(".treeview-menu")&&a.preventDefault()})},$.controlSidebar={activate:function(){var a=this,b=$.options.controlSidebarOptions,c=$(b.selector),d=$(b.toggleBtnSelector);d.on("click",function(d){d.preventDefault(),c.hasClass("control-sidebar-open")||$("body").hasClass("control-sidebar-open")?a.close(c,b.slide):a.open(c,b.slide)});var e=$(".control-sidebar-bg");a._fix(e),$("body").hasClass("fixed")?a._fixForFixed(c):$(".content-wrapper, .right-side").height()<c.height()&&a._fixForContent(c)},open:function(a,b){b?a.addClass("control-sidebar-open"):$("body").addClass("control-sidebar-open")},close:function(a,b){b?a.removeClass("control-sidebar-open"):$("body").removeClass("control-sidebar-open")},_fix:function(a){var b=this;if($("body").hasClass("layout-boxed")){if(a.css("position","absolute"),a.height($(".wrapper").height()),b.hasBindedResize)return;$(window).resize(function(){b._fix(a)}),b.hasBindedResize=!0}else a.css({position:"fixed",height:"auto"})},_fixForFixed:function(a){a.css({position:"fixed","max-height":"100%",overflow:"auto","padding-bottom":"50px"})},_fixForContent:function(a){$(".content-wrapper, .right-side").css("min-height",a.height())}},$.boxWidget={selectors:$.options.boxWidgetOptions.boxWidgetSelectors,icons:$.options.boxWidgetOptions.boxWidgetIcons,animationSpeed:$.options.animationSpeed,activate:function(a){var b=this;a||(a=document),$(a).on("click",b.selectors.collapse,function(a){a.preventDefault(),b.collapse($(this))}),$(a).on("click",b.selectors.remove,function(a){a.preventDefault(),b.remove($(this))})},collapse:function(a){var b=this,c=a.parents(".box").first(),d=c.find("> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer");c.hasClass("collapsed-box")?(a.children(":first").removeClass(b.icons.open).addClass(b.icons.collapse),d.slideDown(b.animationSpeed,function(){c.removeClass("collapsed-box")})):(a.children(":first").removeClass(b.icons.collapse).addClass(b.icons.open),d.slideUp(b.animationSpeed,function(){c.addClass("collapsed-box")}))},remove:function(a){var b=a.parents(".box").first();b.slideUp(this.animationSpeed)}}}if("undefined"==typeof jQuery)throw new Error("AdminLTE requires jQuery");$.AdminLTE={},$.options={navbarMenuSlimscroll:!0,navbarMenuSlimscrollWidth:"3px",navbarMenuHeight:"200px",animationSpeed:500,sidebarToggleSelector:"[data-toggle='offcanvas']",sidebarPushMenu:!0,sidebarSlimScroll:!0,sidebarExpandOnHover:!1,enableBoxRefresh:!0,enableBSToppltip:!0,BSTooltipSelector:"[data-toggle='tooltip']",enableFastclick:!1,enableControlTreeView:!0,enableControlSidebar:!0,controlSidebarOptions:{toggleBtnSelector:"[data-toggle='control-sidebar']",selector:".control-sidebar",slide:!0},enableBoxWidget:!0,boxWidgetOptions:{boxWidgetIcons:{collapse:"fa-minus",open:"fa-plus",remove:"fa-times"},boxWidgetSelectors:{remove:'[data-widget="remove"]',collapse:'[data-widget="collapse"]'}},directChat:{enable:!0,contactToggleSelector:'[data-widget="chat-pane-toggle"]'},colors:{lightBlue:"#3c8dbc",red:"#f56954",green:"#00a65a",aqua:"#00c0ef",yellow:"#f39c12",blue:"#0073b7",navy:"#001F3F",teal:"#39CCCC",olive:"#3D9970",lime:"#01FF70",orange:"#FF851B",fuchsia:"#F012BE",purple:"#8E24AA",maroon:"#D81B60",black:"#222222",gray:"#d2d6de"},screenSizes:{xs:480,sm:768,md:992,lg:1200}},$(function(){"use strict";$("body").removeClass("hold-transition"),"undefined"!=typeof AdminLTEOptions&&$.extend(!0,$.options,AdminLTEOptions);var a=$.options;_init(),$.layout.activate(),a.enableControlTreeView&&$.tree(".sidebar"),a.enableControlSidebar&&$.controlSidebar.activate(),a.navbarMenuSlimscroll&&"undefined"!=typeof $.fn.slimscroll&&$(".navbar .menu").slimscroll({height:a.navbarMenuHeight,alwaysVisible:!1,size:a.navbarMenuSlimscrollWidth}).css("width","100%"),a.sidebarPushMenu&&$.pushMenu.activate(a.sidebarToggleSelector),a.enableBSToppltip&&$("body").tooltip({selector:a.BSTooltipSelector,container:"body"}),a.enableBoxWidget&&$.boxWidget.activate(),a.enableFastclick&&"undefined"!=typeof FastClick&&FastClick.attach(document.body),a.directChat.enable&&$(document).on("click",a.directChat.contactToggleSelector,function(){var a=$(this).parents(".direct-chat").first();a.toggleClass("direct-chat-contacts-open")}),$('.btn-group[data-toggle="btn-toggle"]').each(function(){var a=$(this);$(this).find(".btn").on("click",function(b){a.find(".btn.active").removeClass("active"),$(this).addClass("active"),b.preventDefault()})})}),function(a){"use strict";a.fn.boxRefresh=function(b){function c(a){a.append(f),e.onLoadStart.call(a)}function d(a){a.find(f).remove(),e.onLoadDone.call(a)}var e=a.extend({trigger:".refresh-btn",source:"",onLoadStart:function(a){return a},onLoadDone:function(a){return a}},b),f=a('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>');return this.each(function(){if(""===e.source)return void(window.console&&window.console.log("Please specify a source first - boxRefresh()"));var b=a(this),f=b.find(e.trigger).first();f.on("click",function(a){a.preventDefault(),c(b),b.find(".box-body").load(e.source,function(){d(b)})})})}}(jQuery),function(a){"use strict";a.fn.activateBox=function(){a.boxWidget.activate(this)},a.fn.toggleBox=function(){var b=a(a.boxWidget.selectors.collapse,this);a.boxWidget.collapse(b)},a.fn.removeBox=function(){var b=a(a.boxWidget.selectors.remove,this);a.boxWidget.remove(b)}}(jQuery),function(a){"use strict";a.fn.todolist=function(b){var c=a.extend({onCheck:function(a){return a},onUncheck:function(a){return a}},b);return this.each(function(){"undefined"!=typeof a.fn.iCheck?(a("input",this).on("ifChecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onCheck.call(b)}),a("input",this).on("ifUnchecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onUncheck.call(b)})):a("input",this).on("change",function(){var b=a(this).parents("li").first();b.toggleClass("done"),a("input",b).is(":checked")?c.onCheck.call(b):c.onUncheck.call(b)})})}}(jQuery);$(function(){$('#formMaitreOuvrage').ajaxForm(function(){alert("Bien enregitré.");$('#MaitreOuvragePopup').modal('hide');window.location.reload();});});$(function(){$('#formCategorie').ajaxForm(function(){alert("Bien enregitré.");$('#CategoriePopup').modal('hide');window.location.reload();});});$(function(){$('#formetat').ajaxForm(function(){alert("Bien enregitré.");$('#EtatPopup').modal('hide');window.location.reload();});});$(function(){$('#formTypeAffaire').ajaxForm(function(){alert("Bien enregitré.");$('#TypeAffairePopup').modal('hide');window.location.reload();});});$(function(){$('#formetatAffaire').ajaxForm(function(){alert("Bien enregitré.");$('#EtatAffairePopup').modal('hide');window.location.reload();});});
var options = {  
    success:    function(response) { 
        //window.location.reload();
        alert(response); 
		$('#TypeFraisPopup').modal('hide');
    } 
}; 
 
// pass options to ajaxForm 
$('#formTypeFrais').ajaxForm(options);
$(function(){
    $('#formtypeODS').ajaxForm(function(){
      alert("Bien enregitré.");
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeTypes/";
      else 
      url = "../listeTypes/"; 
      $.getJSON(url,
              function(types) {
                  if(types !== null) {
                    populatetypeslist(types);
                  }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
              console.log("incoming Text " + jqXHR.responseText);
          });
      $('#typeODSPopup').modal('hide');
    });
  });
$(document).ready(function() {
    var
        fraisTable = $('#frais-table'),
        fraisBody = fraisTable.find('tbody'),
        fraisTemplate = _.template($('#frais-template').remove().text()),
        numberRows = fraisTable.find('tbody > tr').length,
        totalinput = $('#totalfrais'),
        achatsTable = $('#achats-table'),
        achatsBody = achatsTable.find('tbody'),
        achatsTemplate = _.template($('#achats-template').remove().text()),
        numberRowsA = achatsTable.find('tbody > tr').length,
        piecesTable = $('#piece-table'),
        piecesBody = piecesTable.find('tbody'),
        piecesTemplate = _.template($('#piece-template').remove().text()),
        numberRowsP = piecesTable.find('tbody > tr').length,
        locationTable = $('#location-table'),
        locationBody = locationTable.find('tbody'),
        locationTemplate = _.template($('#location-template').remove().text()),
        numberRowsL = locationTable.find('tbody > tr').length,
        tab = $("a[class='remove_ctg_panel exit-btn pull-right']").last(),
        counter = tab.attr('accesskey')!= null? (parseInt(tab.attr('accesskey')) + 1 ) : 1
        entretiensTable = $('#entretiens-table'),
        entretiensBody = entretiensTable.find('tbody'),
        entretiensTemplate = _.template($('#entretiens-template').remove().text()),
        numberRowsE = entretiensTable.find('tbody > tr').length;
    fraisTable
        .on('click', 'a.add', function(e) {
            e.preventDefault();
            $(fraisTemplate({key: numberRows++}))
                .hide()
                .appendTo(fraisBody)
                .fadeIn('fast');
        })
        .on('click', 'a.remove', function(e) {
                e.preventDefault();

            $(this)
                .closest('tr')
                .fadeOut('fast', function() {
                    $(this).remove();
                });
        })
        .on('input', 'input.montant', function(e){
        	var $summands = $(document).find('.montant');
	        var sum = 0;
	        $summands.each(function(index, elem) {
	            if(!Number.isNaN(parseInt(this.value, 10)))
	                sum += parseInt(this.value, 10);
	        });
	        totalinput.val(sum);
        })
        .on('input', 'input.QteMois', function(e){
          qtemois = $(this).val();
          var h4 = $(this).parent().parent();
          prix = h4.find('.Prix').val(); 
          cumul = h4.find('.Cumul').val(); 
          qte = h4.find('.Qte').val(); 
          h4.find('.TotalMois').val(parseFloat(prix) * parseInt(qtemois));
          h4.find('.Reste').val(parseInt(qte) - parseInt(qtemois) - parseInt(cumul));
        });

        if (numberRows === 0) {
            fraisTable.find('a.add').click();
        };

    entretiensTable
        .on('click', 'a.add', function(e) {
            e.preventDefault();
            $(entretiensTemplate({key: numberRowsE++}))
                .hide()
                .appendTo(entretiensBody)
                .fadeIn('fast');
        })
        .on('click', 'a.remove', function(e) {
                e.preventDefault();

            $(this)
                .closest('tr')
                .fadeOut('fast', function() {
                    $(this).remove();
                });
        });

    achatsTable
        .on('click', 'a.remove', function(e) {
                e.preventDefault();

            $(this)
                .closest('tr')
                .fadeOut('fast', function() {
                    $(this).remove();
                });
        })
        .on('input', 'input.montant, input.qte', function(e){ 
          calculerTotal(); 
        });
    piecesTable
        .on('click', 'a.add', function(e) {
            e.preventDefault();
            $(piecesTemplate({key: numberRowsP++}))
                .hide()
                .appendTo(piecesBody)
                .fadeIn('fast');
        })
        .on('click', 'a.remove', function(e) {
                e.preventDefault();

            $(this)
                .closest('tr')
                .fadeOut('fast', function() {
                    $(this).remove();
                });
        });

    locationTable
        .on('click', 'a.add', function(e) {
            e.preventDefault();
            $(locationTemplate({key: numberRowsL++}))
                .hide()
                .appendTo(locationBody)
                .fadeIn('fast');
        })
        .on('click', 'a.remove', function(e) {
                e.preventDefault();

            $(this)
                .closest('tr')
                .fadeOut('fast', function() {
                    $(this).remove();
                });
        })
        .on('input', 'input.montant', function(e){ 
          calculerTotalLocation(); 
        });
        
        $('#affaire').change(function() {
		    if($(this).val().length != 0) {
		      $.getJSON("listeSoumissionnaires/"+($(this).val()),
		                function(soumissionnaires) {
		                	//console.log(soumissionnaires); 
		                    if(soumissionnaires !== null) {
		                      populateSoumissionnaireList(soumissionnaires);
		                    }
       			})
		      	.fail(function(jqXHR, textStatus, errorThrown) {
				    console.log("error " + textStatus);
        			console.log("incoming Text " + jqXHR.responseText);
				  });
		    }
	    });
      $('#typeAffectation').change(function() {
        marche = $('#listemarches').val();
        if ($(this).val() == 0)
        {
            var path = window.location.pathname;
            var url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeDepartements/";
            else 
              url = "../listeDepartements/"; 
            $.getJSON(url,
                function(departements) {
                  var options = '<option value=""></option>';
                  departements=departements['departements'];
                  departements.forEach( function (departement)
                  {
                      options += '<option value="' + departement['id'] + '">' + departement['nom'] + '</option>';
                  });
                  $('#listeaffectation').html(options);
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });

              $('#listeparc').prop('value', '');
              $('#listeparc').prop('disabled', true);
       }
       else {
          $('#listeparc').prop('disabled', false);
          var path = window.location.pathname;
            var url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeChantier/"+marche;
            else 
              url = "../listeChantier/"+marche; 
          $.getJSON(url,
                function(chantiers) {
                  var options = '<option value=""></option>';
                  chantiers=chantiers['chantiers'];
                  chantiers.forEach( function (chantier)
                  {
                      options += '<option value="' + chantier['id'] + '">' + chantier['nom'] + '</option>';
                  });
                  $('#listeaffectation').html(options);
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
            path = window.location.pathname;
             url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeParcs/"+marche;
            else 
              url = "../listeParcs/"+marche; 
          $.getJSON(url,
                function(parcs) {
                  var options = '<option value=""></option>';
                  parcs=parcs['parcs'];
                  parcs.forEach( function (parc)
                  {
                      options += '<option value="' + parc['id'] + '">' + parc['libelle'] + '</option>';
                  });
                  $('#listeparc').html(options);
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
       }
      });

      $('#listeaffectation').change(function(){
        url = ""; 
        var path = window.location.pathname;
        typeAffectation = $('#typeAffectation').val();
        if(typeAffectation == 0){
            if(path.indexOf('edit') == -1)
              url= "listePersonnelsDepartement/";
            else 
              url = "../listePersonnelsDepartement/"; 
            $.getJSON(url+$(this).val(),
                function(personnels) {
                  var options = '<option value=""></option>';
                  personnels=personnels['personnels'];
                  personnels.forEach( function (personnel)
                  {
                      options += '<option value="' + personnel['id'] + '">' + personnel['nom'] + ' ' + personnel['prenom'] +'</option>';
                  });
                  $('#listepersonnels').html(options);
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          }
          else{
            if(path.indexOf('edit') == -1)
              url= "listePersonnelsChantier/";
            else 
              url = "../listePersonnelsChantier/"; 
            $.getJSON(url+$(this).val(),
                function(personnels) {
                  var options = '<option value=""></option>';
                  personnels=personnels['personnels'];
                  personnels.forEach( function (personnel)
                  {
                      options += '<option value="' + personnel['id'] + '">' + personnel['nom'] + ' ' + personnel['prenom'] +'</option>';
                  });
                  $('#listepersonnels').html(options);
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          }
      });
    var wrapper = $("#accordion");
  
     $("#addButton").on("click", function(e){ 
         
        e.preventDefault();
        //var catgName = prompt("Saisissez le nom du lot"),
        numberLot = $('.Lot').length;
        console.log(counter); 
      /*if(catgName == ''){
        catgName = 'Catg#'+numberLot;
      }*/
      //if(catgName != null){
        var ariaExpanded = false;
        var expandedClass = '';
        var collapsedClass = 'collapsed';
        if(counter==1){
            ariaExpanded = true;
            expandedClass = 'in';
            collapsedClass = '';
        }

            $(wrapper).append('<div class="col-sm-12" style="margin-bottom: 0;">'+
              '<div class="panel no-border panel-default" id="panel'+ counter +'">' + 
              '<div class="panel-heading" role="tab" id="heading'+ counter +'">'+
              '<h4 class="panel-title">' +
              '<div class="col-sm-1 no-padding"><input value= "" class = "hidden" '+
              'name ="Lots[{'+ numberLot +'}][id]"><input placeholder="N° du lot" type="text" required="required" class="form-control" name ="Lots[{'+ numberLot +'}][numero]" value="'+(numberLot+1)+'">'+
              '</div><div class="col-sm-11 no-padding"><input placeholder="intitulé du lot" required="required" type="text" class="Lot form-control" name ="Lots[{'+ numberLot +'}][intitule]">'+ 
              '</div><div class="actions_div" style="position: relative; top: -26px;">' +
              '<a href="#" accesskey="'+ counter +'" class="remove_ctg_panel exit-btn pull-right">'+
              '<span class="glyphicon glyphicon-remove">  </span>'+
              '</a>'+ 
              '<a href="#" accesskey="'+ counter +'" class="pull-right" id="addButton2"> '+
              '<span class="glyphicon glyphicon-plus"></span> Ajouter une partie</a></div>'+
              '</h4></div></div></div>');
        counter++;
       });
     
    var x = 1; 
       $(wrapper).on("click","#addButton2", function(e){
           e.preventDefault();
           var parentId = $(this).attr('accesskey');
           var parentPanel = '#panel'+ parentId;
           var nameplus = $(parentPanel).find($('input')).attr('name');
           var pos = nameplus.indexOf(']');
           nameplus = nameplus.substring(0, pos+1);
           var numberPartie = $(parentPanel).find($('.Partie')).length;
            var ariaExpanded = false;
            var expandedClass = '';
            var collapsedClass = 'collapsed';
      
          $(wrapper).find(parentPanel).append('<div class="col-sm-12" style="margin-bottom: 0;">'+
              '<div class="panel no-border panel-default" id="panel'+ counter +'">' + 
              '<div class="panel-heading" role="tab" id="heading'+ counter +'">'+
              '<h4 class="panel-title">' +
              '<div class="col-sm-1 no-padding"><input value= "" name ="'+nameplus+'[Parties][{'+ numberPartie +'}][id]" class="hidden"><input placeholder="N° de la partie" type="text" class="col-sm-1 form-control" name ="'+nameplus+'[Parties][{'+ numberPartie +'}][numero]" value="'+(numberPartie+1)+'">'+
              '</div><div class="col-sm-11 no-padding"><input placeholder="intitulé de la partie" type="text" class="Partie col-sm-11 form-control" name ="'+nameplus+'[Parties][{'+ numberPartie +'}][libelle]">'+ 
              '</div><div class="actions_div" style="position: relative; top: -26px;">' +
              '<a href="#" accesskey="'+ counter +'" class="remove_ctg_panel exit-btn pull-right">'+
              '<span class="glyphicon glyphicon-remove">  </span>'+
              '</a>'+ 
              '<a href="#" accesskey="'+ counter +'" class="pull-right" id="addButton3"> '+
              '<span class="glyphicon glyphicon-plus"></span> Ajouter un article</a></div>'+
              '</h4></div></div></div>');
        
        x++;
        counter++;
       });
       
       var y = 1; 
       $(wrapper).on("click","#addButton3", function(e){
              e.preventDefault();
             var parentId = $(this).attr('accesskey');
             var parentPanel = '#panel'+ parentId;
             var nameplus = $(parentPanel).find($('input')).attr('name');
             suffix1 = nameplus.substring(0, nameplus.length-4);
             var numberArticle = $(parentPanel).find($('.Article')).length;
              var ariaExpanded = false;
              var expandedClass = '';
              var collapsedClass = 'collapsed';
            
                $(wrapper).find(parentPanel).append('<div class="col-sm-12" style="margin-bottom: 15px;">'+
                  '<div class="panel no-border panel-default" id="panel'+ counter +'"> '+
                  '<div class="panel-heading" role="tab" id="heading'+ counter +'">'+
                  '<h4 class="panel-title"><input value= "" name ="'+suffix1+'[Articles][{'+ numberArticle +'}][id]" class="hidden">'+
                  '<div class="col-sm-1 no-padding"><input placeholder="N° de l\'article" type="text" class="form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][numero]" '+
                  ' value="'+(numberArticle+1)+'"></div>'+
                  '<div class="col-sm-3 no-padding"><input placeholder="intitulé de l\'article " type="text" class="Article form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][libelle]"></div>'+
                  '<div class="col-sm-2 no-padding"><input placeholder="Qte" type="text" class="form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][qte]" ></div>'+
                  '<div class="col-sm-2 no-padding"><select class="unite-name form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][unite_id]"></select></div>'+
                  '<div class="col-sm-1 no-padding"><input placeholder="Prix unitaire" type="text" class="form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][prix]"></div>'+
                  '<div class="col-sm-3 no-padding"><input placeholder="Total" type="text" class="form-control" '+
                  ' name ="'+suffix1+'[Articles][{'+ numberArticle +'}][total]" ></div>'+
                  '<div class="actions_div" style="position: relative; top: -26px;">' +
                  '<a href="#" accesskey="'+ counter +'" class="remove_ctg_panel exit-btn pull-right">'+
                  '<span class="glyphicon glyphicon-remove">  </span>'+
                  '</a></div></h4></div></div></div>');
              x++;
              counter++;
              var path = window.location.pathname;
              var url = ""; 
              if(path.indexOf('edit') == -1)
                url= "listeUnite/";
              else 
                url = "../listeUnite/"; 
              $.getJSON(url,
                        function(unite) {
                            if(unite !== null) {
                              populateUniteList(unite);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                  });

       });
         $('#regle').change(function() {
           if($( "#regle option:selected" ).text() == "Non"){
              $('#versementdiv').removeClass("hidden");
           }
           else
              $('#versementdiv').addClass("hidden");
        });

      $('#modereglement').change(function() {
           if($( "#modereglement option:selected" ).text() == "Chèque"){
              $('#chequediv').removeClass("hidden");
           }
           else
              $('#chequediv').addClass("hidden");
        });
       $('#MntAvenant').on("input", function(){
          var sum = 0; 
          sum += parseInt($(this).val());
          sum += parseInt($('#montantProjet').val());
          if (isNaN(sum)) sum = 0;
          $('#nvmontantProjet').val(sum); 
       });
       $('#delaiAvenant').on("input", function(){
          var sum = 0; 
          sum += parseInt($(this).val());
          sum += parseInt($('#delaisProjet').val());
          if (isNaN(sum)) sum = 0;
          $('#nvdelaiAvenant').val(sum); 
       });
       
       $(wrapper).on("click",".remove_field", function(e){
           e.preventDefault(); 
        $(this).parent('div').remove();y--;
       });
      
       $(wrapper).on("click",".remove_ctg_panel", function(e){ 
         e.preventDefault(); 
         var accesskey = $(this).attr('accesskey');
            $('#panel'+accesskey).remove();
        //counter--;
        x--;
       });
       $('#detailsMarches').change(function() {
            if($(this).val().length != 0) {
              $.get("getDevis/"+($(this).val()),
                        function(devi) {
                           //console.log(devi); 
                            if(devi !== null) {
                              $('#devisContainer').html(devi);
                              var tab = $("a[class='remove_ctg_panel exit-btn pull-right']").last();
                              counter = tab.attr('accesskey')!= null? (parseInt(tab.attr('accesskey')) + 1 ) : 1;
                              //console.log(counter); 
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                });

                $.getJSON("getDetailsProjet/"+($(this).val()),
                        function(details) {
                            if(details !== null) {
                              details=details['details'];
                              $('#montantProjet').val(details['montant']);
                              $('#delaisProjet').val(details['delai']);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                });
            }
        });
       $('#devis').change(function() {
        if($(this).val().length != 0) {
          $.get("getDevis/"+($(this).val()),
                    function(devi) {
                       //console.log(devi); 
                        if(devi !== null) {
                          $('#devisContainer').html(devi);
                          var tab = $("a[class='remove_ctg_panel exit-btn pull-right']").last();
                          counter = tab.attr('accesskey')!= null? (parseInt(tab.attr('accesskey')) + 1 ) : 1;
                          console.log(counter); 
                        }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          }});
        $('#boncommande').change(function() {
          var path = window.location.pathname;
          if(path.indexOf('edit') != -1)
            path += "/../getBonCommande/";
          else 
            path += "/../getBonCommande/";
          if($(this).val().length != 0) {
            $.get(path +($(this).val()),
                function(boncommande) {
                   //console.log(devi); 
                    if(boncommande !== null) {
                      $('#BCContainer').html(boncommande);
                    }
              })
              .fail(function(jqXHR, textStatus, errorThrown) {
                  console.log("error " + textStatus);
                  console.log("incoming Text " + jqXHR.responseText);
              });
            }
            path = window.location.pathname;
            if(path.indexOf('edit') != -1)
              path += "/../getinfosBC/";
            else 
              path += "/../getinfosBC/";
            $.getJSON(path +($(this).val()),
              function(bonsCommande) {
                    bonsCommande = bonsCommande['bonsCommande'];
                    $('#totalinput').val(bonsCommande['total']);
                    $('#tva').val(bonsCommande['tva']);
                    $('#ttc').val((parseInt(bonsCommande['tva']) 
                      * parseFloat(bonsCommande['total']) / 100) 
                      + parseFloat(bonsCommande['total']));
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          });

       $('#SituationMarche').change(function() {
        if($(this).val().length != 0) {
          $.getJSON("getAttachements/"+($(this).val()),
              function(attachements) {
                if(attachements != null) {
                  //console.log(attachements); 
                  var options = '<option value=""></option>';
                  attachements=attachements['attachements'];
                  attachements.forEach( function (attachement)
                  {
                      options += '<option value="' + attachement['id'] + '">' + attachement['intitule'] + '</option>';
                  });
                  $('#attachement').html(options);
                }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          }});

       $('#genererSituation').on("click", function() {
          alote = $('#AloteCheck').is(':checked'); 
          tous = $('#TousCheck').is(':checked'); 
          attachement = $('#attachement').val();
          $.getJSON("totalSituation/"+attachement,
              function(total) {
                if(total != null) {
                  total = total['total']; 
                  $('#totlaSituation').val(total);
                }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            }); 
          $.get("getDevis/"+attachement+"/"+alote+"/"+tous,
              function(devi) {
                 //console.log(devi); 
                  if(devi !== null) {
                    $('#devisContainer').html(devi);
                    var tab = $("a[class='remove_ctg_panel exit-btn pull-right']").last();
                    counter = tab.attr('accesskey')!= null? (parseInt(tab.attr('accesskey')) + 1 ) : 1;
                    console.log(counter); 
                  }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
          });
       var path = window.location.pathname;
       if(path.indexOf('edit') != -1)
          path += "/..";
       $('#autocomplete').autocomplete({
            serviceUrl: path + '/../listeProduits',
            onSelect: function (suggestion) {
               
               // alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
            }
        });
       /*$('#produits').on("input", function(e) {
          e.preventDefault();
          selectedProd = $(this).val();
          console.log(selectedProd);
          if (selectedProd!= '' && achatsBody.html().indexOf('value="'+selectedProd+'"') == -1){
            $.get("listeProduits/"+selectedProd,
            function(produit) {
              if(produit != null) {
                achatsBody.append(produit);  
              }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
        }
      });*/

       $('#ajoutProduit').on("click", function(e) {
          e.preventDefault();
          selectedProd = $('#autocomplete').val();
          key = numberRowsA++;
          if (selectedProd!= '' && achatsBody.html().indexOf('value="'+selectedProd+'"') == -1){
            var path = window.location.pathname;
            if(path.indexOf('edit') != -1)
              path += "/../../getProduit/"+selectedProd+"/"+key;
            else
              path = "getProduit/"+selectedProd+"/"+key;
            $.get(path,
            function(produit) {
              if(produit != null) {
                achatsBody.append(produit);
                //$('.depot').prop('required', true); 
              }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.log("error " + textStatus);
                console.log("incoming Text " + jqXHR.responseText);
            });
        }
      });
      $('#locationCheck').change(function(e){
        if (($(this)).is(':checked'))
        { 
          console.log(($(this)).is(':checked')); 
          $('#proprietaire').prop('disabled', false);
          $('#ajoutProprio').prop('disabled', false);
        }
        else 
        {
          $('#proprietaire').prop('disabled', true);
          $('#ajoutProprio').prop('disabled', true);
        }
      });
      $('#listeproduit').change(function(e) {
         $('#ressource-name').val($( "#listeproduit option:selected" ).text()); 
         var path = window.location.pathname;
        if(path.indexOf('edit') != -1)
          path += "/../../listDepots/"+($(this).val());
        else
          path = "listDepots/"+($(this).val());
        $.getJSON(path,
        function(depots) {
          if(depots != null) {
            var options = '<option value=""></option>';
            depots = depots['depots'];
            depots.forEach( function (depot)
            {
                options += '<option value="' + depot['id'] + '">' + depot['libelle'] + '</option>';
            });
            $('#listedepot').html(options);
          }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });
      });

      $('#typeRessource').on("change", function(e) {
        $('#listeproduit').html(options);
        if($( "#typeRessource option:selected" ).text() == 'Fournitures')
          $('#qteressource').prop('disabled', false);
        else 
          $('#qteressource').prop('disabled', true);
        var path = window.location.pathname;
        if(path.indexOf('edit') != -1)
          path += "/../../getProduitsSelonType/"+($(this).val());
        else
          path = "getProduitsSelonType/"+($(this).val());
        $.getJSON(path,
        function(produits) {
          if(produits != null) {
            var options = '<option value=""></option>';
            produits = produits['produits'];
            produits.forEach( function (produit)
            {
                options += '<option value="' + produit['id'] + '">' + produit['nom'] + '</option>';
            }); 
            $('#listeproduit').html(options);
          }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });
      });

     $('#totalinput').on('input', function() {
          calculerTTC();
      });
      $('#tva').on('input', function() {
          calculerTTC();
      });
      $('#typefonction').change(function(){
        if ($(this).val() == 1){
          var path = window.location.pathname;
            var url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeDepartements/";
            else 
              url = "../listeDepartements/"; 
          $('#listeprojets').prop("disabled", true);
          $('#listeprojets').prop('value', '');
          $.getJSON(url,
            function(departements) {
              if(departements !== null) {
                var options = '<option value=""></option>';
                departements=departements['departements'];
                departements.forEach( function (departement)
                {
                    options += '<option value="' + departement['id'] + '">' + departement['nom'] + '</option>';
                });
                $('#listeaffectation').html(options);
              }
          })
          .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
              console.log("incoming Text " + jqXHR.responseText);
            });
            path = window.location.pathname;
            url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeFonctionsAdministratives/";
            else 
              url = "../listeFonctionsAdministratives/"; 
          $.getJSON(url,
            function(fonctions) {
              if(fonctions !== null) {
                var options = '<option value=""></option>';
                fonctions=fonctions['fonctions'];
                fonctions.forEach( function (fonction)
                {
                    options += '<option value="' + fonction['id'] + '">' + fonction['nom'] + '</option>';
                });
                $('#listefonction').html(options);
              }
          })
          .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
              console.log("incoming Text " + jqXHR.responseText);
            });
        }
        else
          if ($(this).val() == 2){
            $('#listeprojets').prop("disabled", false);
            $('#listeaffectation').html(options);
            $('#listefonction').html('');
          }
      });

      $('#listeprojets').change(function(){
        var path = window.location.pathname;
            var url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeChantier/";
            else 
              url = "../listeChantier/"; 
         $.getJSON(url + $(this).val(),
            function(chantiers) { 
              if(chantiers !== null) {
                var options = '<option value=""></option>';
                chantiers=chantiers['chantiers'];
                chantiers.forEach( function (chantier)
                {
                    options += '<option value="' + chantier['id'] + '">' + chantier['nom'] + '</option>';
                });
                $('#listeaffectation').html(options);
              }
           })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
          });
        path = window.location.pathname;
            url = ""; 
            if(path.indexOf('edit') == -1)
              url= "listeFonctionsChantier/";
            else 
              url = "../listeFonctionsChantier/"; 
          $.getJSON(url,
            function(fonctions) {
              if(fonctions !== null) {
                var options = '<option value=""></option>';
                fonctions=fonctions['fonctions'];
                fonctions.forEach( function (fonction)
                {
                    options += '<option value="' + fonction['id'] + '">' + fonction['nom'] + '</option>';
                });
                $('#listefonction').html(options);
              }
          })
          .fail(function(jqXHR, textStatus, errorThrown) {
              console.log("error " + textStatus);
              console.log("incoming Text " + jqXHR.responseText);
            });
      });
      $('#typecontrat').change(function(){
        if($(this).val() == 0){
          $('#dureecontrat').prop('disabled', true);
          $('#dureecontrat').prop('value', ''); 
        }
        else if($(this).val() == 1)
          $('#dureecontrat').prop('disabled', false);
      });
});
$(function(){$('#formSoumissionnaire').ajaxForm(function(){alert("Bien enregitré.");$('#SoumissionnairePopup').modal('hide');window.location.reload();});});

function populateSoumissionnaireList(soumissionnaires) {
  var options = '<option value=""></option>';
  soumissionnaires=soumissionnaires['soumissionnaires'];

  soumissionnaires.forEach( function (soumissionnaire)
	{
	    options += '<option value="' + soumissionnaire['id'] + '">' + soumissionnaire['nom'] + '</option>';
	   // console.log('<option value="' + soumissionnaire['id'] + '">' + soumissionnaire['nom'] + '</option>');
	});
  //alert(soumissionnaires);
  $('#soumissionnaire-name').html(options);
}; 

function populateUniteList(unites) {
  var options = '<option value=""></option>';
  unites = unites['unite'];
  unites.forEach( function (unite)
    {
        options += '<option value="' + unite['id'] + '">' + unite['signe'] + '</option>';
       // console.log('<option value="' + soumissionnaire['id'] + '">' + soumissionnaire['nom'] + '</option>');
    });
  //alert(soumissionnaires);
  $('.unite-name').html(options);
  var Target = document.getElementsByClassName("unite-name")[0];
  Target.className="form-control";
};

function populatetypeslist(types) {
  var options = '<option value=""></option>';
  types = types['types'];
  console.log(types); 
  types.forEach( function (types)
    {
        options += '<option value="' + types['id'] + '">' + types['libelle'] + '</option>';
       // console.log('<option value="' + soumissionnaire['id'] + '">' + soumissionnaire['nom'] + '</option>');
    });
  //alert(soumissionnaires);
  $('#typesods').html(options);
}; 

$(function(){
    $('#formExpediteur').ajaxForm(function(){alert("Bien enregitré.");
    $('#ExpediteurPopup').modal('hide');window.location.reload();});
});

$(function(){
    $('#formremboursementsavance').ajaxForm(function(response){alert("Bien enregitré.");
    $('#remboursementsavancePopup').modal('hide');window.location.reload();
});
});
$('#remboursementsavancePopup').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget); // Button that triggered the modal
  var recipient = button.data('whatever'); // Extract info from data-* attributes
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this);
  modal.find('#avance_id').val(recipient);

});
$(function(){
    $('#formremboursementscaution').ajaxForm(function(response){alert("Bien enregitré.");
    $('#remboursementscautionPopup').modal('hide');window.location.reload();
});
});
$('#remboursementscautionPopup').on('show.bs.modal', function (event) {
  var button = $(event.relatedTarget); // Button that triggered the modal
  var recipient = button.data('whatever'); // Extract info from data-* attributes
  // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
  // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
  var modal = $(this);
  modal.find('#caution_id').val(recipient);

});

$('#marche').change(function() {
    if($(this).val().length != 0) {
      $.getJSON("TotalMontants/"+($(this).val()),
                function(TotalMontants) {
                   console.log(TotalMontants); 
                    if(TotalMontants !== null) {
                      populateMontantTotals(TotalMontants);
                    }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
          });
    }
});
$('#typescaution').change(function() {
            if($(this).val().length != 0) {
              $.getJSON("pourcentages_Cautions/"+($(this).val()),
                        function(TypesCautions) {
                            console.log(TypesCautions); 
                            if(TypesCautions !== null) {
                              populatePourcentage(TypesCautions);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                  });
            }
        });
$('#typesavance').change(function() {
            if($(this).val().length != 0) {
              $.getJSON("pourcentages_Avances/"+($(this).val()),
                        function(TypesAvances) {
                            console.log(TypesAvances); 
                            if(TypesAvances !== null) {
                              populatePourcentageAvance(TypesAvances);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                  });
            }
        });
$('#typesavanceedit').change(function() {
            if($(this).val().length != 0) {
              $.getJSON("../pourcentages_Avances/"+($(this).val()),
                        function(TypesAvances) {
                            console.log(TypesAvances); 
                            if(TypesAvances !== null) {
                              populatePourcentageAvance(TypesAvances);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                  });
            }
        });

$('#typescautionedit').change(function() {
            if($(this).val().length != 0) {
              $.getJSON("../pourcentages_Cautions/"+($(this).val()),
                        function(TypesCautions) {
                            console.log(TypesCautions); 
                            if(TypesCautions !== null) {
                              populatePourcentageCaution(TypesCautions);
                            }
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.log("error " + textStatus);
                    console.log("incoming Text " + jqXHR.responseText);
                  });
            }
        });

function populateMontantTotals(TotalMontants) {
   // alert(TotalMontants);
  TotalMontants=TotalMontants['TotalMontants'];
  console.log(TotalMontants); 

  options=TotalMontants ;
  //alert(options);
  $('#montant-value').val(options);
}; 

function populatePourcentage(TypesCautions) {
  // alert(TypesCautions);
  TypesCautions=TypesCautions['TypesCautions'];


  TypesCautions.forEach( function (TypesCautions)
    {
        options=TypesCautions['pourcentage'] ;
    });
  //alert(options);
  $('#pourcentage').val(options);
}; 
function populatePourcentageAvance(TypesAvances) {
  // alert(TypesAvances);
  TypesAvances=TypesAvances['TypesAvances'];


  options=TypesAvances ;
  //alert(options);
  $('#pourcentage').val(options);
}; 
function populatePourcentageCaution(TypesCautions) {
  // alert(TypesAvances);
  TypesCautions=TypesCautions['TypesCautions'];


  TypesCautions.forEach( function (TypesCautions)
    {
        options=TypesCautions['pourcentage'] ;
    });
  //alert(options);
  $('#pourcentage').val(options);
}; 
$(function(){
    $('#formTypeAvance').ajaxForm(function(){alert("Bien enregitré.");
    $('#TypeAvancePopup').modal('hide');window.location.reload();});
});
$(function(){$('#formTypePV').ajaxForm(
    function(){
      alert("Bien enregitré.");
      $('#TypePVpopup').modal('hide');
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeTypes";
      else 
        url = "../listeTypes"; 
      $.getJSON(url,
          function(types) {;
              var options = '<option value=""></option>';
              types=types['types'];
              types.forEach( function (type)
              {
                  options += '<option value="' + type['id'] + '">' + type['libelle'] + '</option>';
              });
              $('#typesliste').html(options);
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });
    });
});
$(function(){$('#formFournisseur').ajaxForm(
    function(){
      alert("Bien enregitré.");
      $('#fournisseurPopup').modal('hide');
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeFournisseurs";
      else 
        url = "../listeFournisseurs"; 
      $.getJSON(url,
          function(fournisseurs) { 
              var options = '<option value=""></option>';
              fournisseurs=fournisseurs['fournisseurs'];
              fournisseurs.forEach( function (fournisseur)
              {
                  options += '<option value="' + fournisseur['id'] + '">' + fournisseur['nom'] + '</option>';
              });
              $('#fournisseursliste').html(options);
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });
    });
});
$(function(){$('#formDepot').ajaxForm(
    function(){
      alert("Bien enregitré.");
      $('#depotPopup').modal('hide');
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeDepots";
      else 
        url = "../listeDepots"; 
      $.getJSON(url,
          function(depots) { 
              var options = '<option value=""></option>';
              depots=depots['depots'];
              depots.forEach( function (depot)
              {
                  options += '<option value="' + depot['id'] + '">' + depot['libelle'] + '</option>';
              });
              $('.depot').html(options);
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });
    });
});

function calculerTotalLocation(){
   var sum = 0;
  $('#location-table > tbody  > tr').each(function() {
    mnt = parseFloat($(this).find('.montant').val());
    sum += mnt;
    return sum; 
  });
  $('#totalinput').val(sum);
  calculerTTCLocation();
};

function calculerTotal(){
  var sum = 0;
  $('#achats-table > tbody  > tr').each(function() {
    qte = parseInt($(this).find('.qte').val()); 
    mnt = parseFloat($(this).find('.montant').val());
    amount = qte*mnt;
    $(this).find('.total').val(amount);
    sum += amount;
    return sum; 
  });
  $('#totalinput').val(sum);
  calculerTTC();
};

function calculerTTCLocation(){
  total = 0, tva = 0, amount= 0; 
  if ($('#totalinput').val() == "")
    total = 0;
  else
    total = parseFloat($('#totalinput').val()); 
  if($('#tva').val() == "")
    tva = 0 ; 
  else 
    tva = parseInt($('#tva').val());
  amount = (tva*total/100) + total;
  $('#ttc').val(amount);
};

function calculerTTC(){
  total = 0, tva = 0, amount= 0; 
  if ($('#totalinput').val() == "")
    total = 0;
  else
    total = parseFloat($('#totalinput').val()); 
  if($('#tva').val() == "")
    tva = 0 ; 
  else 
    tva = parseInt($('#tva').val());
  amount = (tva*total/100) + total;
  $('#ttc').val(amount);
};

$(function(){
    $('#formProprietaire').ajaxForm(function(){
      alert("Bien enregitré.");
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeProprietaire/";
      else 
      url = "../listeProprietaire/"; 
      $.getJSON(url,
          function(proprietaires) {
              if(proprietaires !== null) {
               var options = '<option value=""></option>';
                proprietaires=proprietaires['proprietaires'];
                proprietaires.forEach( function (proprietaire)
                {
                    options += '<option value="' + proprietaire['id'] + '">' + proprietaire['nom'] + '</option>';
                });
                $('#proprietaireliste').html(options);
                }
          })
          .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });

    $('#ProprietairePopup').modal('hide');
    });
  });

$(function(){
    $('#formTypeRessource').ajaxForm(function(){
      alert("Bien enregitré.");
      var path = window.location.pathname;
      var url = ""; 
      if(path.indexOf('edit') == -1)
        url= "listeTypesRessources/";
      else 
      url = "../listeTypesRessources/"; 
      $.getJSON(url,
          function(typesRessources) {
              if(typesRessources !== null) {
               var options = '<option value=""></option>';
                typesRessources=typesRessources['typesRessources'];
                typesRessources.forEach( function (typesRessource)
                {
                    options += '<option value="' + typesRessource['id'] + '">' + typesRessource['libelle'] + '</option>';
                });
                $('#typesRessourcesliste').html(options);
                }
          })
          .fail(function(jqXHR, textStatus, errorThrown) {
            console.log("error " + textStatus);
            console.log("incoming Text " + jqXHR.responseText);
        });

    $('#typeRessourcePopup').modal('hide');
    });
  });

$(function(){
  $('#formFonction').ajaxForm(function(){
  alert("Bien enregitré.");

  $('#listefonction').prop('value', '');
  $('#listeaffectation').prop('value', '');
  $('#typefonction').prop('value', '');
  $('#listeprojets').prop('disabled', true);
  $('#listeprojets').prop('value', '');

  $('#fonctionPopup').modal('hide');
  });
});
        